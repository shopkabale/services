<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<title>KabaleOnline Services | Find Local Pros in Kabale & Kigezi</title>
<meta name="description" content="The #1 marketplace to find and offer services in Kabale, Uganda. Connect with trusted local plumbers, developers, photographers, tutors, and more.">
<meta name="keywords" content="services in kabale, find a job kabale, local professionals kigezi, kabale uganda marketplace, hire someone kabale, photographers kabale, plumbers kabale, web developers kabale">
<meta name="author" content="KabaleOnline">

<!-- Fonts & Icons -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

<style>
:root {
    --bg-primary: #0d2857; --bg-secondary: #10336d; --bg-card: #0a214d;
    --text-primary: #ffffff; --text-secondary: #a7c0e8; --accent-primary: #007bff;
    --border-color: #1f4287; --transition-speed: 0.3s;
}
body.light-mode {
    --bg-primary: #f0f4f9; --bg-secondary: #ffffff; --bg-card: #ffffff;
    --text-primary: #0d2857; --text-secondary: #6c757d; --border-color: #dee2e6;
}
* { margin: 0; padding: 0; box-sizing: border-box; }
html { scroll-behavior: smooth; }
body { font-family: 'Poppins', sans-serif; background-color: var(--bg-primary); color: var(--text-secondary); }
.container { max-width: 1200px; margin: 0 auto; padding: 0 15px; }
h2 { font-size: 2.5rem; text-align: center; margin-bottom: 1rem; color: var(--text-primary); }
p { color: var(--text-secondary); }
.btn { display: inline-block; padding: 12px 28px; background-color: var(--accent-primary); color: #fff; border-radius: 50px; text-decoration: none; font-weight: 600; border: 2px solid var(--accent-primary); margin: 5px; transition: all 0.3s; }
.btn:hover { background-color: transparent; color: var(--accent-primary); }

/* Header */
.header { position: sticky; top: 0; z-index: 1000; background-color: var(--bg-card); padding: 10px 0; box-shadow: 0 5px 15px rgba(0,0,0,0.1); }
.navbar { display: flex; justify-content: space-between; align-items: center; }
.nav-logo { font-size: 1.6rem; font-weight: 800; color: var(--accent-primary); text-decoration: none; }
.nav-menu { display: flex; align-items: center; gap: 10px; }
.nav-menu a, .theme-toggle { cursor: pointer; transition: all 0.3s; }
.nav-menu a:hover { transform: translateY(-2px); }
.theme-toggle { font-size: 1.5rem; background: none; border: none; color: var(--text-primary); }

/* Hero */
.hero { height: 90vh; position: relative; overflow: hidden; }
.hero-slider-wrapper { display: flex; height: 100%; transition: transform 0.7s ease-in-out; }
.hero-slide { min-width: 100%; height: 100%; background-size: cover; background-position: center; position: relative; display: flex; align-items: center; justify-content: center; text-align: center; color: #fff; }
.hero-slide::before { content: ''; position: absolute; top:0; left:0; width:100%; height:100%; background: rgba(13,40,87,0.7); }
.hero-content { position: relative; z-index: 2; max-width: 800px; padding: 0 20px; }
.hero-content h1 { font-size: 3.5rem; font-weight: 800; line-height: 1.2; margin-bottom: 20px; }
.hero-content p { font-size: 1.2rem; margin-bottom: 30px; }
.hero-nav { position: absolute; bottom: 25px; z-index: 3; background: rgba(255,255,255,0.2); border: none; color:#fff; font-size: 1.5rem; width: 40px; height: 40px; border-radius: 50%; cursor:pointer; display:flex; align-items:center; justify-content:center; transition: background-color 0.3s ease; }
.hero-nav:hover { background-color: rgba(255,255,255,0.4); }
.hero-prev { left: 80px; }
.hero-next { right: 80px; }
.hero-dots { position: absolute; bottom: 30px; left:50%; transform: translateX(-50%); display:flex; gap:10px; z-index:3; }
.hero-dot { width:12px; height:12px; border-radius:50%; background: rgba(255,255,255,0.5); cursor:pointer; }
.hero-dot.active { background:#fff; }

/* Typing Animation */
.typing { display:inline-block; border-right:3px solid var(--accent-primary); white-space: nowrap; overflow: hidden; animation: blinkCursor 0.8s steps(2,start) infinite; }
@keyframes blinkCursor { 50% { border-color: transparent; } }

/* Search Section */
#search-section { padding: 50px 0; text-align: center; }
#search-section input { padding: 12px 20px; width: 60%; max-width: 500px; border-radius: 50px; border: 2px solid var(--accent-primary); outline: none; transition: all 0.3s; }
#search-section input:hover, #search-section input:focus { transform: scale(1.02); box-shadow: 0 0 15px rgba(0,123,255,0.3); border-color: #0056b3; }

/* Responsive */
@media (max-width:768px) { .hero-content h1 { font-size:2.5rem; } .hero-content p { font-size:1.1rem; } .hero-prev { left:20px; } .hero-next { right:20px; } #search-section input { width:80%; } }
@media (max-width:480px) { .hero-content h1 { font-size:2rem; } .hero-content p { font-size:1rem; } }
</style>
</head>
<body class="dark-mode">

<header class="header">
  <nav class="navbar container">
    <a href="index.html" class="nav-logo">KabaleOnline</a>
    <div class="nav-menu">
      <a href="services.html" class="btn-header">Browse</a>
      <a href="browse-jobs.html" class="btn-header">Jobs</a>
      <a href="how-it-works.html" class="btn-header">How It Works</a>
      <a href="auth.html" class="btn-header" id="login-link">Login</a>
      <a href="dashboard.html" class="btn-header" id="dashboard-link" style="display:none;">My Dashboard</a>
      <button id="theme-toggle" class="theme-toggle" title="Toggle theme"><i class="fas fa-moon"></i></button>
    </div>
  </nav>
</header>

<main>
<section id="hero" class="hero">
  <div class="hero-slider-wrapper">
    <div class="hero-slide" style="background-image:url('https://images.unsplash.com/photo-1521791136064-7986c2920216?q=80&w=2070&auto=format&fit=crop');">
      <div class="hero-content">
        <h1 class="typing-text">Need a Skill? Find a Local Pro.</h1>
        <p>Connect with trusted experts in Kabale for any project.</p>
        <div><a href="services.html" class="btn">Find a Service</a><a href="auth.html" class="btn btn-secondary">Offer a Service</a></div>
      </div>
    </div>
    <div class="hero-slide" style="background-image:url('https://images.unsplash.com/photo-1581578731548-c64695cc6952?q=80&w=2070&auto=format&fit=crop');">
      <div class="hero-content">
        <h1 class="typing-text">Your Home, Expertly Cared For.</h1>
        <p>From plumbing to painting, find reliable help for home maintenance.</p>
        <div><a href="services.html" class="btn">Find a Service</a><a href="auth.html" class="btn btn-secondary">Offer a Service</a></div>
      </div>
    </div>
    <!-- Add more slides as needed -->
  </div>
  <button class="hero-nav hero-prev"><i class="fas fa-chevron-left"></i></button>
  <button class="hero-nav hero-next"><i class="fas fa-chevron-right"></i></button>
  <div class="hero-dots"></div>
</section>

<section id="search-section">
  <input type="text" placeholder="Search for services..." />
</section>

<!-- Remaining sections preserved as in original HTML -->

</main>

<script>
// Hero slider with typing animation
document.addEventListener("DOMContentLoaded", function() {
  const wrapper = document.querySelector('.hero-slider-wrapper');
  const slides = document.querySelectorAll('.hero-slide');
  const nextBtn = document.querySelector('.hero-next');
  const prevBtn = document.querySelector('.hero-prev');
  const dotsContainer = document.querySelector('.hero-dots');

  if(!wrapper || slides.length===0) return;
  let currentSlide=0;
  let slideInterval;
  const totalSlides = slides.length;

  // Create dots
  for(let i=0;i<totalSlides;i++){
    const dot=document.createElement('div');
    dot.classList.add('hero-dot');
    dot.addEventListener('click',()=>{ goToSlide(i); startSlideShow(); });
    dotsContainer.appendChild(dot);
  }

  function updateDots(){
    const dots = dotsContainer.querySelectorAll('.hero-dot');
    dots.forEach((dot,i)=>dot.classList.toggle('active',i===currentSlide));
  }

  // Typing animation
  function animateTyping(element){
    const phrases = [
      "Need a Skill? Find a Local Pro.",
      "Your Home, Expertly Cared For.",
      "Bring Your Ideas to Life.",
      "Grow Your Local Business."
    ];
    let i=0;
    function typePhrase(){
      let text=phrases[i];
      let index=0;
      element.textContent='';
      element.classList.add('typing');
      const typingInterval=setInterval(()=>{
        element.textContent=text.substring(0,index+1);
        index++;
        if(index===text.length){
          clearInterval(typingInterval);
          setTimeout(()=>{
            i=(i+1)%phrases.length;
            typePhrase();
          },2000);
        }
      },70);
    }
    typePhrase();
  }

  // Go to slide
  function goToSlide(n){
    currentSlide = (n+totalSlides)%totalSlides;
    wrapper.style.transform=`translateX(-${currentSlide*100}%)`;
    updateDots();
  }

  // Auto slide
  function startSlideShow(){
    clearInterval(slideInterval);
    slideInterval=setInterval(()=>goToSlide(currentSlide+1),6000);
  }

  // Buttons
  nextBtn.addEventListener('click',()=>{ goToSlide(currentSlide+1); startSlideShow(); });
  prevBtn.addEventListener('click',()=>{ goToSlide(currentSlide-1); startSlideShow(); });

  // Init
  goToSlide(0);
  startSlideShow();
  const typingElement = slides[0].querySelector('.typing-text');
  if(typingElement) animateTyping(typingElement);
});
</script>

</body>
</html>